version: '2'

services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
        SG_VERSION: $SG_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./config/sg_internal_users.yml:/usr/share/elasticsearch/config/sg/sg_internal_users.yml:ro
      - es:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
        SG_VERSION_KIBANA: $SG_VERSION_KIBANA
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elk
    depends_on:
      - elasticsearch

  web:
    build: web/
    networks:
      - elk

  nginx:
    build: 
        context: nginx/
        dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - kibana
      - web
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
    es:
